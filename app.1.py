import streamlit as st
from reconocimiento_facial import ReconocimientoFacial
from MySql import BaseDeDatos
import cv2
import numpy as np

# Configurar p√°gina
st.set_page_config(page_title="Sistema de Reconocimiento Facial", page_icon="üòé", layout="centered")

# Agregar CSS personalizado
st.markdown("""
    <style>
        .title {
            color: #ffffff;
            background-color: #ff6347;
            padding: 10px;
            border-radius: 10px;
            text-align: center;
            font-size: 30px;
        }
        .login-box {
            background-color: #f5f5f5;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 5px 5px 15px rgba(0,0,0,0.3);
            width: 400px;
            margin: auto;
            text-align: center;
        }
        .stButton > button {
            background-color: #ff6347;
            color: white;
            font-size: 18px;
            border-radius: 10px;
            padding: 10px;
        }
    </style>
""", unsafe_allow_html=True)

# Inicializar base de datos y reconocimiento facial
bd = BaseDeDatos()
reconocimiento_facial = ReconocimientoFacial()

# Manejo de sesi√≥n
if "autenticado" not in st.session_state:
    st.session_state.autenticado = False

# --- Pantalla de Login ---
if not st.session_state.autenticado:
    st.markdown('<h1 class="title">Inicio de Sesi√≥n</h1>', unsafe_allow_html=True)
    
    with st.container():
        st.markdown('<div class="login-box">', unsafe_allow_html=True)
        usuario = st.text_input("Usuario", key="user_input")
        contrase√±a = st.text_input("Contrase√±a", type="password", key="password_input")
        if st.button("Iniciar Sesi√≥n"):
            if usuario == "admin" and contrase√±a == "1234":  # ‚ö† Validaci√≥n temporal
                st.session_state.autenticado = True
                st.success("Acceso concedido")
                st.rerun()
            else:
                st.error("Usuario o contrase√±a incorrectos")
        st.markdown("</div>", unsafe_allow_html=True)

# --- M√≥dulos del sistema ---
else:
    st.sidebar.title("Men√∫")
    pesta√±as = st.tabs(["Reconocimiento Facial", "M√≥dulo 2", "M√≥dulo 3"])

    # M√≥dulo de reconocimiento facial
    with pesta√±as[0]:
        st.subheader("M√≥dulo de Reconocimiento Facial")
        if st.button("üîç Verificar Rostro"):
            nombre, num_doc = reconocimiento_facial.verificar_usuario(bd)
            if nombre:
                st.success(f"Bienvenido {nombre}, documento: {num_doc}")
            else:
                st.error("Usuario no v√°lido.")
    
    # M√≥dulo 2 (sin funcionalidad a√∫n)
    with pesta√±as[1]:
        st.subheader("M√≥dulo 2")
        st.info("Pr√≥ximamente...")
    
    # M√≥dulo 3 (sin funcionalidad a√∫n)
    with pesta√±as[2]:
        st.subheader("M√≥dulo 3")
        st.info("Pr√≥ximamente...")
    
    # Opci√≥n para cerrar sesi√≥n
    if st.sidebar.button("Cerrar Sesi√≥n"):
        st.session_state.autenticado = False
        st.rerun()
